services:
  airport:
    build:
      context: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - ENVIRONMENT=docker
    depends_on:
      - redis
      - db
    networks:
      - default
    command: >
      sh -c "python manage.py migrate &&
      python manage.py loaddata airport_initial_data.json
      && python manage.py runserver 0.0.0.0:8000"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  db:
    image: postgres:16-alpine
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - my_db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  redis:
    image: redis:latest
    ports:
      - "6380:6379"
    networks:
      - default

networks:
  default:
    name: api-airport-network

volumes:
  my_db:
